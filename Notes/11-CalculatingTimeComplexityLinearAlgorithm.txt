Calculating Time Complexity of a Linear Algorithm:

Given:
    
    public void findSum(int n){
        int sum = 0; // 1 step
        for (int i = 1; i <= n; i++) {
            sum = sum + i; // n steps
        }
        return sum; // 1 step
    }


    line no.    |    operations     |   unit time  
    2           |    1              |   1
    3           |    1+3(n+1)+3n    |   
    -3-         |    1+3n+3+3n      |  6n+4
    
    4           |    n(1+1+1+1)     |   4n
    6           |    1+1            |   2

            
            T = 1 + 6n+4 + 4n + 2
            T = 10n + 7     ignore lower order terms, and constant multipliers, SO time complexity = O(n)

                            Linear Algorithm Graph Image: https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9qmncGA3g3QY5mbPsNRnB_tB7vtU3-P2FdA&s